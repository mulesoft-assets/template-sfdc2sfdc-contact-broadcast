<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">
	<munit:config name="test-suite.xml" doc:name="MUnit configuration" />

	<configuration-properties doc:name="Configuration properties" file="mule.test.properties" />
	
    <munit:before-test name="test-suitBefore_Test" description="Before tests actions" doc:id="175afc70-0474-4bb0-90a8-20029cf4ea1d">
		<ee:transform doc:name="Set unique Emails for Contacts" doc:id="305513a0-5eca-4796-a6d9-269be9dc7f48">
			<ee:message >
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="migratedContact" ><![CDATA[%dw 2.0
output application/java
---
"test" ++ randomInt(1000) ++ "@test.com"]]>
</ee:set-variable>
<ee:set-variable variableName="notMigratedContact" ><![CDATA[%dw 2.0
output application/java
---
"test" ++ randomInt(1000) ++ "@test.com"]]>
</ee:set-variable>
<ee:set-variable variableName="updatedContact" ><![CDATA[%dw 2.0
output application/java
---
"test" ++ randomInt(1000) ++ "@test.com"]]>
</ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Prepare testing data for instance A" doc:id="7c253cc1-4a09-4e71-a9c5-74e5dbbf5848">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[{
	Email: vars.migratedContact,
	Description: "test description1",
	FirstName: "Integration1",
	LastName: "Test1",
	MailingCountry: "US",
	Title: "TestTitle1"
},
{
	Email: vars.notMigratedContact,
	Description: "test description2",
	FirstName: "Integration2",
	LastName: "Test2",
	MailingCountry: "UK",
	Title: "TestTitle2"
},
{
    Email: vars.updatedContact,
    Description: "test description3",
    FirstName: "Integration3",
    LastName: "Test3",
    MailingCountry: "US",
    Title: "TestTitle A"
}
]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:create doc:id="8b0cbb2b-6715-42c9-83ce-6fbb32928599" doc:name="Create Contacts in instance A" config-ref="Salesforce_Sfdc_A_config"
			type="Contact" />
        <set-variable value="#[payload.items map ($.id)]" doc:name="Store IDs to variable sfdcAIds" doc:id="623a0d4f-c873-45e6-a7ee-89bc1e194721"
			variableName="sfdcAIds" />
		<ee:transform doc:name="Prepare testing data for instance B" doc:id="7c253cc1-4a09-4e71-a9c5-74e5dbbf5848">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[{
	Email: vars.updatedContact,
	Description: "test description3",
	FirstName: "Integration3",
	LastName: "Test3",
	MailingCountry: "US",
	Title: "TestTitle B"
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:create doc:id="8b0cbb2b-6715-42c9-83ce-6fbb32928599" doc:name="Create Contact in instance B" config-ref="Salesforce_Sfdc_B_config"
			type="Contact" />
		<set-variable value="#[payload.items map ($.Id)]" doc:name="Set IDs to variable sfdcBIds" doc:id="6bd73591-80ee-469f-a71e-380da1b9cc31"
			variableName="sfdcBIds" />
	</munit:before-test>
	<munit:test name="test-suite-schedulerFlowTest" description="Test" doc:id="236d8fcb-cceb-4135-921a-2f6bcf502e6c">
		<munit:execution>
			<scripting:execute doc:name="Sleep for 5s before we start tests" doc:id="68f96218-bb52-4fbc-92c8-1b014988e3e2" engine="groovy">
				<scripting:code>sleep(5000)</scripting:code>
			</scripting:execute>
			<flow-ref doc:name="Call salesforceQueryFlow" doc:id="9e1d190e-0195-4d26-970d-5fdbb75dddd0" name="salesforceQueryFlow"/>
<ee:transform doc:name="Filter test Records" doc:id="42a4ca72-7eed-4d8c-b19d-d2821370025b" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload filter ($.Email == vars.migratedContact
	or $.Email == vars.notMigratedContact 
	or $.Email == vars.updatedContact  
)]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call bussinesLogicFlow" doc:id="5ab4bfcb-8d3f-4c20-b8a5-cd1d1a6a9165" name="bussinesLogicFlow" />
			<scripting:execute doc:name="Sleep for 30s until the processing is completed" doc:id="b09fe305-3000-4571-b824-8b555395ccb7"
				engine="groovy">
				<scripting:code>sleep(30000)</scripting:code>
			</scripting:execute>
			<salesforce:query doc:name="Query for Contact, which shouldn't be migrated to instance B" doc:id="bfe557e1-98d0-493f-adf2-45dbe2ca140b"
				config-ref="Salesforce_Sfdc_B_config" target="notMigratedResult">
				<salesforce:salesforce-query>SELECT Id FROM Contact WHERE Email = ':email'</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : vars.notMigratedContact
}]]]></salesforce:parameters>
			</salesforce:query>
			<salesforce:query doc:name="Query for Contact, which should be migrated to instance B" doc:id="145cdbc1-3137-4eef-b8e3-7aea91cb9833"
				config-ref="Salesforce_Sfdc_B_config" target="migratedResult">
				<salesforce:salesforce-query>SELECT Id FROM Contact WHERE Email = ':email'
				</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : vars.migratedContact
}]]]></salesforce:parameters>
			</salesforce:query>
			<set-variable value="#[(vars.migratedResult map ($.Id)) ++ vars.sfdcBIds]" doc:name="Set IDs to variable sfdcBIds" doc:id="6bd73591-80ee-469f-a71e-380da1b9cc31"
				variableName="sfdcBIds" />
			<salesforce:query doc:name="Query for Contact, which should be updated in instance B" doc:id="145cdbc1-3137-4eef-b8e3-7aea91cb9833"
				config-ref="Salesforce_Sfdc_B_config" target="updatedResult">
				<salesforce:salesforce-query>SELECT Title FROM Contact WHERE Email = ':email'
				</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : vars.updatedContact
}]]]></salesforce:parameters>
			</salesforce:query>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that we didn't find Contact" doc:id="1e559409-a86b-47b9-bb44-cbcac54c4ade" expression="#[sizeOf(vars.notMigratedResult)]" is="#[MunitTools::equalTo(0)]" message="Assert that we didn't find Contact has failed"/>
			<munit-tools:assert-that doc:name="Assert that we found migrated Contact" doc:id="a8f4453a-10c6-4508-8ecf-64cc08e6129c" expression="#[sizeOf(vars.migratedResult)]" is="#[MunitTools::equalTo(1)]" message="Assert that we found migrated Contact has failed"/>
			<munit-tools:assert-that doc:name="Assert that we have updated Contact" doc:id="3bbcc0d3-ad82-46de-8502-7c79e9408421" expression="#[vars.updatedResult[0].Title]" is='#[MunitTools::equalTo("TestTitle A")]' message="Assert that we have updated Contact has failed"/>
			<munit-tools:verify-call doc:name="Verify call for upsert operation" doc:id="d169a8c9-05fa-410f-bf1f-679ac50991ea"
				processor="salesforce:create-job" times="1" >
                <munit-tools:with-attributes >
                    <munit-tools:with-attribute whereValue="Upsert job - Contacts in Salesforce B" attributeName="doc:name" />
                </munit-tools:with-attributes>
            </munit-tools:verify-call>
		</munit:validation>
	</munit:test>

	<munit:after-test name="test-suitAfter_Test" description="After tests actions" doc:id="671a6eba-9998-4f11-8c8f-6bcbe368718c">
		<salesforce:delete doc:name="Delete testing Contacts from A" doc:id="788956ca-8ada-49c2-a3f7-7eb367e735b4" config-ref="Salesforce_Sfdc_A_config">
			<salesforce:ids><![CDATA[#[vars.sfdcAIds]]]></salesforce:ids>
		</salesforce:delete>
		<salesforce:delete doc:id="116d2e04-500c-4219-b9f3-c44979cc4715" doc:name="Delete testing Contacts form B" config-ref="Salesforce_Sfdc_B_config">
			<salesforce:ids><![CDATA[#[vars.sfdcBIds]]]></salesforce:ids>
		</salesforce:delete>
	</munit:after-test>

</mule>
